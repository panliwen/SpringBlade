/**
 * Copyright (c) 2018-2028, Chill Zhuang 庄骞 (smallchill@163.com).
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#set($voPackage=$package.Entity.replace("entity","vo"))
package $!{voPackage};

import $!{package.Entity}.$!{entity};
#if($!{entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
#end
#if($!{swagger2})
import io.swagger.annotations.ApiModel;
#end
import org.springblade.core.tool.node.INode;
import com.fasterxml.jackson.annotation.JsonInclude;
import org.springblade.modules.hehui.base.constant.BaseCommonValue;
import java.util.ArrayList;
import java.util.List;

/**
 * $!{table.comment} 视图实体类
 *
 * @author $!{author}
 * @since $!{date}
 */
#if($!{entityLombokModel})
@Data
@EqualsAndHashCode(callSuper = true)
#end
#if($!{swagger2})
@ApiModel(value = "$!{entity}VO对象", description = #if ("$!{table.comment}"=="")"$!{entity}VO对象"#else"$!{table.comment}"#end)
#end
public class $!{entity}VO extends $!{entity} #if($!{superEntityClass})implements INode#end {
	private static final long serialVersionUID = 1L;

    private Integer operation= BaseCommonValue.OPERATION_HAVE;//数据操作标识,0表示新增或修改,1表示删除(更新接口用到)
    #if($!{superEntityClass})
    private String createUserName;
    private String updateUserName;

    /**
     * 父节点ID
     */
    private Long parentId;

    /**
     * 子孙节点
     */
    @JsonInclude(JsonInclude.Include.NON_EMPTY)
    private List<INode> children;

    @Override
    public List<INode> getChildren() {
        if (this.children == null) {
            this.children = new ArrayList<>();
        }
        return this.children;
    }
#end

}
